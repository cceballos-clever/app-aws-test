name: Deploy Infra AWS

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
      SUBNET_IDS: ${{ secrets.SUBNET_IDS }}
      VPC_ID: ${{ secrets.VPC_ID }}
      PUBLIC_SUBNET_IDS: ${{ secrets.PUBLIC_SUBNET_IDS }}
      PRIVATE_SUBNET_IDS: ${{ secrets.PRIVATE_SUBNET_IDS }}
      
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Packer
        uses: hashicorp/setup-packer@v2
        with:
          version: "1.10.0"

      - name: Packer Init
        working-directory: packer
        run: |
          export PACKER_GITHUB_API_TOKEN=${{ secrets.PACKER_GITHUB_API_TOKEN }}
          packer init ami.pkr.hcl


      - name: Build AMI
        run: packer build packer/ami.pkr.hcl
        
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.8.0"      

      - name: Get AMI ID
        id: ami
        run: |
          AMI_ID=$(jq -r '.builds[0].artifact_id' manifest.json | cut -d':' -f2)
          echo "AMI_ID=$AMI_ID" >> $GITHUB_ENV

      - name: Terraform Init
        working-directory: terraform
        run: terraform init
             
      - name: Terraform Apply
        working-directory: terraform
        env:
          TF_LOG: DEBUG
        run: |
          terraform apply -auto-approve \
            -var="region=${{ secrets.AWS_REGION }}" \
            -var="access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" \
            -var="secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
            -var="db_password=${{ secrets.DB_PASSWORD }}" \
            -var="db_username=${{ secrets.DB_USERNAME }}" \
            -var="domain_name=${{ secrets.DOMAIN_NAME }}" \
            -var="public_subnet_ids="subnet-05352e7349a18d8a2" \
            -var="private_subnet_ids="subnet-0b3f6d0226fc3122a" \
            -var="ami_id=${{ env.AMI_ID }}" \
            -var="vpc_id=${{ secrets.VPC_ID }}"
